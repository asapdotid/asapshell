#!/bin/bash
# Molecule test Ansible
alias mol='molecule'
alias mol:d='molecule --debug'
alias mol:ck='molecule check'
alias mol:d:ck='molecule --debug check'
alias mol:p:ck='molecule check --parallel'
alias mol:s:ck='molecule check --scenario-name'
alias mol:cu='molecule cleanup'
alias mol:d:cu='molecule --debug cleanup'
alias mol:s:cu='molecule cleanup --scenario-name'
alias mol:cv='molecule converge'
alias mol:d:cv='molecule --debug converge'
alias mol:s:cv='molecule converge --scenario-name'
alias mol:c='molecule create'
alias mol:d:c='molecule --debug create'
alias mol:s:c='molecule create --scenario-name'
alias mol:dn:c='molecule create --driver-name'
alias mol:de='molecule dependency'
alias mol:d:de='molecule --debug dependency'
alias mol:s:de='molecule dependency --scenario-name'
alias mol:ds='molecule destroy'
alias mol:ds:a='molecule destroy --all'
alias mol:d:ds='molecule --debug destroy'
alias mol:p:ds='molecule destroy --parallel'
alias mol:s:ds='molecule destroy --scenario-name'
alias mol:id='molecule idempotence'
alias mol:d:id='molecule --debug idempotence'
alias mol:s:id='molecule idempotence --scenario-name'
alias mol:i='molecule init role'
alias mol:ln='molecule lint'
alias mol:d:ln='molecule --debug lint'
alias mol:s:ln='molecule lint --scenario-name'
alias mol:ls='molecule list'
alias mol:ls:fp='molecule list --format plain'
alias mol:ls:fy='molecule list --format yml'
alias mol:d:ls='molecule --debug list'
alias mol:s:ls='molecule list --scenario-name'
alias mol:li='molecule login'
alias mol:d:li='molecule --debug login'
alias mol:s:li='molecule login --scenario-name'
alias mol:mx='molecule matrix subcommand'
alias mol:d:mx='molecule --debug matrix subcommand'
alias mol:s:mx='molecule_matrix'
alias mol:pp='molecule prepare'
alias mol:d:pp='molecule --debug prepare'
alias mol:s:pp='molecule prepare --scenario-name'
alias mol:sx='molecule syntax'
alias mol:d:sx='molecule --debug syntax'
alias mol:s:sx='molecule syntax --scenario-name'
alias mol:t='molecule test'
alias mol:t:da='molecule test --destroy=always'
alias mol:t:dn='molecule test --destroy=never'
alias mol:t:a='molecule test --all'
alias mol:s:t='molecule test --scenario-name'
alias mol:d:t='molecule --debug test'
alias mol:p:t='molecule test --parallel'
alias mol:v='molecule verify'
alias mol:d:v='molecule --debug verify'
alias mol:s:v='molecule verify --scenario-name'

# Functions
molecule_matrix() {
  local sce_name=$1
  if [ -z "$sce_name" ]; then
    error "Please, provide scenario name!"
  else
    molecule matrix --scenario-name $sce_name subcommand
  fi
}
