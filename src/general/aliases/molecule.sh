#!/usr/bin/env bash
# Molecule test Ansible
alias mo='molecule'
alias mo:d='molecule --debug'
alias mo:ck='molecule check'
alias mo:d:ck='molecule --debug check'
alias mo:p:ck='molecule check --parallel'
alias mo:s:ck='molecule check --scenario-name'
alias mo:cu='molecule cleanup'
alias mo:d:cu='molecule --debug cleanup'
alias mo:s:cu='molecule cleanup --scenario-name'
alias mo:cv='molecule converge'
alias mo:d:cv='molecule --debug converge'
alias mo:s:cv='molecule converge --scenario-name'
alias mo:c='molecule create'
alias mo:d:c='molecule --debug create'
alias mo:s:c='molecule create --scenario-name'
alias mo:dn:c='molecule create --driver-name'
alias mo:de='molecule dependency'
alias mo:d:de='molecule --debug dependency'
alias mo:s:de='molecule dependency --scenario-name'
alias mo:ds='molecule destroy'
alias mo:ds:a='molecule destroy --all'
alias mo:d:ds='molecule --debug destroy'
alias mo:p:ds='molecule destroy --parallel'
alias mo:s:ds='molecule destroy --scenario-name'
alias mo:id='molecule idempotence'
alias mo:d:id='molecule --debug idempotence'
alias mo:s:id='molecule idempotence --scenario-name'
alias mo:i='molecule init role'
alias mo:ln='molecule lint'
alias mo:d:ln='molecule --debug lint'
alias mo:s:ln='molecule lint --scenario-name'
alias mo:ls='molecule list'
alias mo:ls:fp='molecule list --format plain'
alias mo:ls:fy='molecule list --format yml'
alias mo:d:ls='molecule --debug list'
alias mo:s:ls='molecule list --scenario-name'
alias mo:li='molecule login'
alias mo:d:li='molecule --debug login'
alias mo:s:li='molecule login --scenario-name'
alias mo:mx='molecule matrix subcommand'
alias mo:d:mx='molecule --debug matrix subcommand'
alias mo:s:mx='molecule_matrix'
alias mo:pp='molecule prepare'
alias mo:d:pp='molecule --debug prepare'
alias mo:s:pp='molecule prepare --scenario-name'
alias mo:sx='molecule syntax'
alias mo:d:sx='molecule --debug syntax'
alias mo:s:sx='molecule syntax --scenario-name'
alias mo:t='molecule test'
alias mo:t:da='molecule test --destroy=always'
alias mo:t:dn='molecule test --destroy=never'
alias mo:t:a='molecule test --all'
alias mo:s:t='molecule test --scenario-name'
alias mo:d:t='molecule --debug test'
alias mo:p:t='molecule test --parallel'
alias mo:v='molecule verify'
alias mo:d:v='molecule --debug verify'
alias mo:s:v='molecule verify --scenario-name'
# Functions
molecule_matrix() {
  local sce_name=$1
  if [ -z "$sce_name" ]; then
    error "Please, provide scenario name!"
  else
    molecule matrix --scenario-name "$sce_name" subcommand
  fi
}
